[project]
name = "AyugeSpiderTools"
dynamic = ["version", "readme"]
description = "scrapy 扩展库：用于扩展 Scrapy 功能来解放双手。"
license = { text = "MIT" }
requires-python = ">=3.9"
authors = [
    { name = "ayuge", email = "ayugesheng@gmail.com" },
]
maintainers = [
    { name = "ayuge", email = "ayugesheng@gmail.com" },
]
keywords = ["crawler", "scraping", "scrapy-extension"]
dependencies = [
    "pymysql (>=1.0.2,<2.0.0)",
    "loguru (>=0.7.0,<0.8.0)",
    "scrapy (==2.12.0)",
    "retrying (>=1.3.3,<2.0.0)",
    "sqlalchemy (>=2.0.23,<3.0.0)",
    "dbutils (>=3.0.2,<4.0.0)",
    "itemadapter (>=0.7.0,<0.8.0)",
    "aiohttp (>=3.10.6,<3.11.0)",
    "aiomysql (>=0.1.1,<0.2.0)",
    "pika (>=1.3.2,<1.4.0)",
    "kafka-python (==2.0.2)",
    "motor (>=3.5.1,<3.6.0)"
]

[project.urls]
homepage = "https://www.ayuge.top/mkdocs-material/"
repository = "https://github.com/shengchenyang/AyugeSpiderTools"
documentation = "https://ayugespidertools.readthedocs.io/en/latest/"

[project.scripts]
ayuge = "ayugespidertools.utils.cmdline:execute"

[project.optional-dependencies]
all = [
    "mmh3 (>=3.0.0,<4.0.0)",
    "pycryptodome (>=3.15.0,<4.0.0)",
    "python-hcl2 (>=4.3.0,<5.0.0)",
    "pyyaml (>=6.0,<6.1)",
    "opencv-python (>=4.8.0.74,<4.9.0.0)",
    "numpy (>=1.26.0,<1.27.0)",
    "pillow (>=9.2.0,<10.0.0)",
    "psycopg[binary,pool] (<=3.1.13)",
    "oracledb (>=1.4.2,<2.0.0)",
    "elasticsearch-dsl (>=8.11.0,<9.0.0)",
    "oss2 (>=2.18.4,<3.0.0)"
]
database = [
    "psycopg[binary,pool] (<=3.1.13)",
    "oracledb (>=1.4.2,<2.0.0)",
    "elasticsearch-dsl (>=8.11.0,<9.0.0)"
]

[tool.poetry]
version = "3.11.1"
readme = ["README.rst", "README_en.rst"]
packages = [{ include = "ayugespidertools" }]
requires-poetry = "2.0.1"

[tool.poetry.dependencies]
python = "^3.9"
mmh3 = { version = "^3.0.0", optional = true }
pycryptodome = { version = "^3.15.0", optional = true }
python-hcl2 = { version = "^4.3.0", optional = true }
pyyaml = { version = "~6.0", optional = true }
opencv-python = { version = "~4.8.0.74", optional = true }
Pillow = { version = "^9.2.0", optional = true }
numpy = { version = "~1.26.0", optional = true }
psycopg = { version = "<=3.1.13", extras = ["binary", "pool"], optional = true }
oracledb = { version = "^1.4.2", optional = true }
elasticsearch-dsl = { version = "^8.11.0", optional = true }
oss2 = { version = "^2.18.4", optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "7.4.4"
black = "24.4.2"
isort = "5.13.2"
pyupgrade = "3.18.0"
sphinx-rtd-theme = "1.2.0"
coverage = "7.4.1"
tox = "4.12.1"
flake8 = "7.1.0"
testfixtures = "^7.1.0"
myst-parser = "1.0.0"
sphinx-markdown-tables = "0.0.17"
sphinx-hoverxref = "1.3.0"
sphinx-notfound-page = "0.8.3"
mypy = "1.10.1"
pre-commit = "3.5.0"
toml = "0.10.2"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "aliyun"
url = "https://mirrors.aliyun.com/pypi/simple"
priority = "supplemental"

[tool.poetry.requires-plugins]
poetry-bumpversion = "==0.3.3"

[tool.poetry_bumpversion.file."ayugespidertools/__init__.py"]
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[tool.pytest.ini_options]
xfail_strict = true
python_files = "test_*.py __init__.py"
python_classes = "Test*"
testpaths = [
    "tests",
]
norecursedirs = ["dist", "build", "docs", "examples"]
addopts = "--assert=plain --doctest-modules --reactor=asyncio"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:scrapy.downloadermiddlewares.decompression is deprecated",
    "ignore:Module scrapy.utils.reqser is deprecated",
    "ignore:typing.re is deprecated",
    "ignore:typing.io is deprecated"
]

[tool.coverage.run]
branch = true
source = ["ayugespidertools"]
parallel = true
omit = [
    "tests/docs/*",
    "tests/VIT/*",
    "tests/conftest.py",
    "tests/**/__init__.py",
    "ayugespidertools/request.py",
    "ayugespidertools/**/__init__.py",
    "ayugespidertools/utils/cmdline.py",
    "ayugespidertools/data/*",
]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == '__main__':",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "__repr__",
    "__str__",
]
precision = 2
fail_under = 30

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
disable_error_code = ["attr-defined", "arg-type", "union-attr"]

[[tool.mypy.overrides]]
module = [
    "yaml",
    "toml",
    "pymysql",
    "pymysql.connections",
    "pymysql.cursors",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ayugespidertools.items"
ignore_errors = "True"

[[tool.mypy.overrides]]
module = "ayugespidertools.common.typevars"
ignore_errors = "True"

[[tool.mypy.overrides]]
module = "tests.mockserver"
ignore_errors = "True"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
